//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace Cfg.Role
{

public sealed partial class Table_RoleMeta :  Bright.Config.BeanBase 
{
    public Table_RoleMeta(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        name = _buf.ReadString();
        desc = _buf.ReadString();
        base_attr_value = Bean.actor_base_attribute_value.Deserializeactor_base_attribute_value(_buf);
        hp_factor = _buf.ReadFloat();
        mp_factor = _buf.ReadFloat();
        atk_factor = _buf.ReadFloat();
        def_factor = _buf.ReadFloat();
        spd_factor = _buf.ReadFloat();
        mvt_factor = _buf.ReadFloat();
        str_factor = _buf.ReadFloat();
        agi_factor = _buf.ReadFloat();
        spw_factor = _buf.ReadFloat();
        Class = _buf.ReadInt();
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);AbilityBaseID = new int[n];for(var i = 0 ; i < n ; i++) { int _e;_e = _buf.ReadInt(); AbilityBaseID[i] = _e;}}
        RoleType = (Enum.RoleType)_buf.ReadInt();
        AssetPath = _buf.ReadString();
        PostInit();
    }

    public static Table_RoleMeta DeserializeTable_RoleMeta(ByteBuf _buf)
    {
        return new Role.Table_RoleMeta(_buf);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string name { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string desc { get; private set; }
    /// <summary>
    /// 属性数值
    /// </summary>
    public Bean.actor_base_attribute_value base_attr_value { get; private set; }
    /// <summary>
    /// 血量系数
    /// </summary>
    public float hp_factor { get; private set; }
    /// <summary>
    /// 魔法系数
    /// </summary>
    public float mp_factor { get; private set; }
    /// <summary>
    /// 基础攻击力系数
    /// </summary>
    public float atk_factor { get; private set; }
    /// <summary>
    /// 基础防御力
    /// </summary>
    public float def_factor { get; private set; }
    /// <summary>
    /// 基础速度
    /// </summary>
    public float spd_factor { get; private set; }
    /// <summary>
    /// 基础移动力
    /// </summary>
    public float mvt_factor { get; private set; }
    /// <summary>
    /// 力量
    /// </summary>
    public float str_factor { get; private set; }
    /// <summary>
    /// 敏捷
    /// </summary>
    public float agi_factor { get; private set; }
    /// <summary>
    /// 法伤
    /// </summary>
    public float spw_factor { get; private set; }
    /// <summary>
    /// 职业，索引Role_Class枚举
    /// </summary>
    public int Class { get; private set; }
    /// <summary>
    /// 角色持有的技能，索引AbilityBase表
    /// </summary>
    public int[] AbilityBaseID { get; private set; }
    public Enum.RoleType RoleType { get; private set; }
    /// <summary>
    /// 资产路径
    /// </summary>
    public string AssetPath { get; private set; }

    public const int __ID__ = -525201020;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        base_attr_value?.Resolve(_tables);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        base_attr_value?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "name:" + name + ","
        + "desc:" + desc + ","
        + "base_attr_value:" + base_attr_value + ","
        + "hp_factor:" + hp_factor + ","
        + "mp_factor:" + mp_factor + ","
        + "atk_factor:" + atk_factor + ","
        + "def_factor:" + def_factor + ","
        + "spd_factor:" + spd_factor + ","
        + "mvt_factor:" + mvt_factor + ","
        + "str_factor:" + str_factor + ","
        + "agi_factor:" + agi_factor + ","
        + "spw_factor:" + spw_factor + ","
        + "Class:" + Class + ","
        + "AbilityBaseID:" + Bright.Common.StringUtil.CollectionToString(AbilityBaseID) + ","
        + "RoleType:" + RoleType + ","
        + "AssetPath:" + AssetPath + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
