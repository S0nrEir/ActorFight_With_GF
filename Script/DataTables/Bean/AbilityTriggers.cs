//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace Cfg.Bean
{

/// <summary>
/// 技能节点和对应携带的effects
/// </summary>
public sealed partial class AbilityTriggers :  Bright.Config.BeanBase 
{
    public AbilityTriggers(ByteBuf _buf) 
    {
        TriggerTime = _buf.ReadFloat();
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);CarrayedEffects = new int[n];for(var i = 0 ; i < n ; i++) { int _e;_e = _buf.ReadInt(); CarrayedEffects[i] = _e;}}
        PostInit();
    }

    public static AbilityTriggers DeserializeAbilityTriggers(ByteBuf _buf)
    {
        return new Bean.AbilityTriggers(_buf);
    }

    /// <summary>
    /// 触发时间
    /// </summary>
    public float TriggerTime { get; private set; }
    /// <summary>
    /// 节点携带的effect
    /// </summary>
    public int[] CarrayedEffects { get; private set; }

    public const int __ID__ = 395783879;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "TriggerTime:" + TriggerTime + ","
        + "CarrayedEffects:" + Bright.Common.StringUtil.CollectionToString(CarrayedEffects) + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
