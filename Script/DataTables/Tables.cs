//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;


namespace Cfg
{
   
public partial class Tables
{
    public item.TbItem TbItem {get; }
    public Role.RoleBaseAttr RoleBaseAttr {get; }
    public Single.SceneConfig SceneConfig {get; }
    public Common.Scripts Scripts {get; }
    public Fight.Ability Ability {get; }
    public Fight.AbilityTimeline AbilityTimeline {get; }
    public Common.Effect Effect {get; }
    public Role.RoleMeta RoleMeta {get; }
    public Single.GameText GameText {get; }

    public Tables(System.Func<string, ByteBuf> loader)
    {
        var tables = new System.Collections.Generic.Dictionary<string, object>();
        TbItem = new item.TbItem(loader("item_tbitem")); 
        tables.Add("item.TbItem", TbItem);
        RoleBaseAttr = new Role.RoleBaseAttr(loader("role_rolebaseattr")); 
        tables.Add("Role.RoleBaseAttr", RoleBaseAttr);
        SceneConfig = new Single.SceneConfig(loader("single_sceneconfig")); 
        tables.Add("Single.SceneConfig", SceneConfig);
        Scripts = new Common.Scripts(loader("common_scripts")); 
        tables.Add("Common.Scripts", Scripts);
        Ability = new Fight.Ability(loader("fight_ability")); 
        tables.Add("Fight.Ability", Ability);
        AbilityTimeline = new Fight.AbilityTimeline(loader("fight_abilitytimeline")); 
        tables.Add("Fight.AbilityTimeline", AbilityTimeline);
        Effect = new Common.Effect(loader("common_effect")); 
        tables.Add("Common.Effect", Effect);
        RoleMeta = new Role.RoleMeta(loader("role_rolemeta")); 
        tables.Add("Role.RoleMeta", RoleMeta);
        GameText = new Single.GameText(loader("single_gametext")); 
        tables.Add("Single.GameText", GameText);

        PostInit();
        TbItem.Resolve(tables); 
        RoleBaseAttr.Resolve(tables); 
        SceneConfig.Resolve(tables); 
        Scripts.Resolve(tables); 
        Ability.Resolve(tables); 
        AbilityTimeline.Resolve(tables); 
        Effect.Resolve(tables); 
        RoleMeta.Resolve(tables); 
        GameText.Resolve(tables); 
        PostResolve();
    }

    public void TranslateText(System.Func<string, string, string> translator)
    {
        TbItem.TranslateText(translator); 
        RoleBaseAttr.TranslateText(translator); 
        SceneConfig.TranslateText(translator); 
        Scripts.TranslateText(translator); 
        Ability.TranslateText(translator); 
        AbilityTimeline.TranslateText(translator); 
        Effect.TranslateText(translator); 
        RoleMeta.TranslateText(translator); 
        GameText.TranslateText(translator); 
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}