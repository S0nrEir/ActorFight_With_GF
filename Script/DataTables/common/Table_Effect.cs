//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace Cfg.Common
{

public sealed partial class Table_Effect :  Bright.Config.BeanBase 
{
    public Table_Effect(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        Tag = (Enum.EffectTagType)_buf.ReadInt();
        Type = (Enum.EffectType)_buf.ReadInt();
        ModifierNumric = _buf.ReadFloat();
        ModifierType = (Enum.NumricModifierType)_buf.ReadInt();
        Take = (Enum.DurationPolicy)_buf.ReadInt();
        Period = _buf.ReadFloat();
        Target = _buf.ReadInt();
        EffectType = (Enum.Actor_Attr)_buf.ReadInt();
        PostInit();
    }

    public static Table_Effect DeserializeTable_Effect(ByteBuf _buf)
    {
        return new Common.Table_Effect(_buf);
    }

    /// <summary>
    /// id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 携带的Tag类型，添加时添加tag，移除时，移除tag
    /// </summary>
    public Enum.EffectTagType Tag { get; private set; }
    /// <summary>
    /// Effect的类型
    /// </summary>
    public Enum.EffectType Type { get; private set; }
    /// <summary>
    /// 修改器数值
    /// </summary>
    public float ModifierNumric { get; private set; }
    /// <summary>
    /// 数值修改器类型
    /// </summary>
    public Enum.NumricModifierType ModifierType { get; private set; }
    /// <summary>
    /// 生效策略
    /// </summary>
    public Enum.DurationPolicy Take { get; private set; }
    /// <summary>
    /// 生效周期，单位毫秒
    /// </summary>
    public float Period { get; private set; }
    /// <summary>
    /// 目标类型，0=我方，1=敌方
    /// </summary>
    public int Target { get; private set; }
    /// <summary>
    /// 影响的数值类型
    /// </summary>
    public Enum.Actor_Attr EffectType { get; private set; }

    public const int __ID__ = 1812133477;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "Tag:" + Tag + ","
        + "Type:" + Type + ","
        + "ModifierNumric:" + ModifierNumric + ","
        + "ModifierType:" + ModifierType + ","
        + "Take:" + Take + ","
        + "Period:" + Period + ","
        + "Target:" + Target + ","
        + "EffectType:" + EffectType + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
