//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace Cfg.item
{

public sealed partial class Item :  Bright.Config.BeanBase 
{
    public Item(ByteBuf _buf) 
    {
        id = _buf.ReadInt();
        name = _buf.ReadString();
        desc = _buf.ReadString();
        price = _buf.ReadInt();
        upgrade_to_item_id = _buf.ReadInt();
        if(_buf.ReadBool()){ expire_time = _buf.ReadInt(); } else { expire_time = null; }
        batch_useable = _buf.ReadBool();
        quality = (item.EQuality)_buf.ReadInt();
        exchange_stream = item.ItemExchange.DeserializeItemExchange(_buf);
        {int n = System.Math.Min(_buf.ReadSize(), _buf.Size);exchange_list = new System.Collections.Generic.List<item.ItemExchange>(n);for(var i = 0 ; i < n ; i++) { item.ItemExchange _e;  _e = item.ItemExchange.DeserializeItemExchange(_buf); exchange_list.Add(_e);}}
        exchange_column = item.ItemExchange.DeserializeItemExchange(_buf);
        PostInit();
    }

    public static Item DeserializeItem(ByteBuf _buf)
    {
        return new item.Item(_buf);
    }

    /// <summary>
    /// 这是id
    /// </summary>
    public int id { get; private set; }
    /// <summary>
    /// 名字
    /// </summary>
    public string name { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string desc { get; private set; }
    /// <summary>
    /// 价格
    /// </summary>
    public int price { get; private set; }
    /// <summary>
    /// 引用当前表
    /// </summary>
    public int upgrade_to_item_id { get; private set; }
    public item.Item upgrade_to_item_id_Ref { get; private set; }
    /// <summary>
    /// 过期时间
    /// </summary>
    public int? expire_time { get; private set; }
    /// <summary>
    /// 能否批量使用
    /// </summary>
    public bool batch_useable { get; private set; }
    /// <summary>
    /// 品质
    /// </summary>
    public item.EQuality quality { get; private set; }
    /// <summary>
    /// 道具兑换配置
    /// </summary>
    public item.ItemExchange exchange_stream { get; private set; }
    public System.Collections.Generic.List<item.ItemExchange> exchange_list { get; private set; }
    /// <summary>
    /// 道具兑换配置
    /// </summary>
    public item.ItemExchange exchange_column { get; private set; }

    public const int __ID__ = 2107285806;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        this.upgrade_to_item_id_Ref = (_tables["item.TbItem"] as item.TbItem).GetOrDefault(upgrade_to_item_id);
        exchange_stream?.Resolve(_tables);
        foreach(var _e in exchange_list) { _e?.Resolve(_tables); }
        exchange_column?.Resolve(_tables);
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
        exchange_stream?.TranslateText(translator);
        foreach(var _e in exchange_list) { _e?.TranslateText(translator); }
        exchange_column?.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "id:" + id + ","
        + "name:" + name + ","
        + "desc:" + desc + ","
        + "price:" + price + ","
        + "upgrade_to_item_id:" + upgrade_to_item_id + ","
        + "expire_time:" + expire_time + ","
        + "batch_useable:" + batch_useable + ","
        + "quality:" + quality + ","
        + "exchange_stream:" + exchange_stream + ","
        + "exchange_list:" + Bright.Common.StringUtil.CollectionToString(exchange_list) + ","
        + "exchange_column:" + exchange_column + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
